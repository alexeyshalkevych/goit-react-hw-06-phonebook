{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","redux/form/formSelectors.js","components/Containers/FormContainer.js","redux/contacts/contactsActions.js","redux/actionTypes.js","redux/form/formActions.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/Containers/ContactContainer.js","components/ContactList/ContactList.styled.js","transition/slide.transition.js","components/ContactList/ContactList.js","redux/filter/filterSelectors.js","redux/contacts/contactsSelectors.js","components/Containers/ContactListContainer.js","components/ContactFilter/ContactFilter.styled.js","transition/pop.transition.js","components/ContactFilter/ContactFilter.js","components/Containers/ContactFilterContainer.js","redux/filter/filterActions.js","utils/helpers.js","components/Phonebook/Phonebook.styled.js","transition/popText.transition.js","components/Phonebook/Phonebook.js","components/Containers/PhonebookContainer.js","components/App/App.js","redux/contacts/contactsReducer.js","redux/filter/filterReducer.js","redux/form/formReducer.js","redux/store.js","index.js"],"names":["FormContainer","styled","form","Label","label","InputField","input","Button","button","ContactForm","addContact","changeInput","resetForm","name","number","handleChange","e","target","value","onSubmit","preventDefault","type","onChange","autoComplete","getForm","state","mapDispatchToProps","contact","payload","id","uuidv4","field","connect","ContactContainer","div","ContactName","span","ContactNumber","DeleteButton","Contact","item","deleteContact","onClick","List","ul","li","Slide","transition","attrs","unmountOnExit","timeout","ContactList","contacts","TransitionGroup","component","map","key","getFilter","filter","getContacts","getContactsWithFilter","createSelector","toLowerCase","includes","PopFilter","ContactFilter","changeFilter","in","length","isInvalidContact","trim","toast","error","match","hasStateContact","find","findContact","PhonebookContainer","PhonebookTitle","h1","PhonebookSubTitle","h2","Notification","ToastContainer","SlideTitle","Phonebook","getAllContacts","useState","showTitle","setShowTitle","useEffect","persistedContacts","items","localStorage","getItem","JSON","parse","err","Error","get","setItem","stringify","save","autoClose","App","contactReducer","filteredState","filterReducer","initialState","formReducer","rootReducer","combineReducers","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.518acfcf.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const FormContainer = styled.form`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.59);\n`;\n\nexport const Label = styled.label`\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 500;\n`;\n\nexport const InputField = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 15px;\n  padding: 8px 5px;\n  border-radius: 4px;\n  border: 1px solid rgb(126, 126, 126);\n\n  :focus {\n    border-color: rgb(0, 106, 177);\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 100%;\n  padding: 10px 5px;\n  font-family: sans-serif;\n  font-size: 14px;\n  line-height: 1.2;\n  font-weight: 400;\n  color: #fff;\n  background-color: rgb(0, 106, 177);\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.75);\n  transition: all 0.2s ease-in;\n\n  :hover {\n    cursor: pointer;\n    background-color: rgb(19, 19, 138);\n  }\n\n  :disabled {\n    cursor: default;\n    background-color: rgb(85, 85, 85);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormContainer, Label, InputField, Button } from './ContactForm.styled';\n\nconst ContactForm = ({ addContact, changeInput, resetForm, form }) => {\n  const { name, number } = form;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    addContact({ name, number });\n\n    resetForm();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    changeInput(name, value);\n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <InputField\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </Label>\n      <Label>\n        Number\n        <InputField\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </FormContainer>\n  );\n};\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n  form: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  changeInput: PropTypes.func.isRequired,\n  resetForm: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","const getForm = state => state.form;\n\nexport default getForm;\n","import { connect } from 'react-redux';\nimport ContactForm from '../ContactForm/ContactForm';\nimport { addContact } from '../../redux/contacts/contactsActions';\nimport { changeInput, resetForm } from '../../redux/form/formActions';\nimport getForm from '../../redux/form/formSelectors';\n\nconst mapStateToProps = state => ({\n  form: getForm(state),\n});\n\nconst mapDispatchToProps = {\n  addContact,\n  changeInput,\n  resetForm,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { v4 as uuidv4 } from 'uuid';\nimport { GET_ALL_CONTACTS, ADD_CONTACT, DELETE_CONTACT } from '../actionTypes';\n\nexport const getAllContacts = contacts => ({\n  type: GET_ALL_CONTACTS,\n  payload: contacts,\n});\n\nexport const addContact = contact => ({\n  type: ADD_CONTACT,\n  payload: {\n    ...contact,\n    id: uuidv4(),\n  },\n});\n\nexport const deleteContact = id => ({\n  type: DELETE_CONTACT,\n  payload: id,\n});\n","export const GET_ALL_CONTACTS = 'GET_ALL_CONTACTS';\nexport const ADD_CONTACT = 'ADD_CONTACT';\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\nexport const CHANGE_INPUT = 'CHANGE_INPUT';\nexport const RESET_INPUT = 'RESET_INPUT';\n","import { CHANGE_INPUT, RESET_INPUT } from '../actionTypes';\n\nexport const changeInput = (field, value) => ({\n  type: CHANGE_INPUT,\n  payload: { [field]: value },\n});\n\nexport const resetForm = () => ({\n  type: RESET_INPUT,\n});\n","import styled from 'styled-components';\n\nexport const ContactContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ContactName = styled.span`\n  flex: 1 0 auto;\n`;\n\nexport const ContactNumber = styled.span`\n  margin-right: 50px;\n`;\n\nexport const DeleteButton = styled.button`\n  display: block;\n  padding: 5px 10px;\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 400;\n  color: rgb(255, 255, 255);\n  background-color: rgb(218, 1, 1);\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.75);\n  transition: all 0.2s ease-in;\n\n  :hover {\n    cursor: pointer;\n    background-color: rgb(170, 0, 0);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ContactContainer,\n  ContactName,\n  ContactNumber,\n  DeleteButton,\n} from './Contact.styled';\n\nconst Contact = ({ item: { id, name, number }, deleteContact }) => (\n  <ContactContainer>\n    <ContactName>{name}</ContactName>\n    <ContactNumber>{number}</ContactNumber>\n    <DeleteButton type=\"button\" onClick={() => deleteContact(id)}>\n      &#10006;\n    </DeleteButton>\n  </ContactContainer>\n);\n\nContact.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import { connect } from 'react-redux';\nimport Contact from '../Contact/Contact';\nimport { deleteContact } from '../../redux/contacts/contactsActions';\n\nconst mapDispatchToProps = {\n  deleteContact,\n};\n\nexport default connect(null, mapDispatchToProps)(Contact);\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  padding: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.59);\n`;\n","import transition from 'styled-transition-group';\n\nconst Slide = transition.li.attrs({\n  unmountOnExit: true,\n  timeout: 250,\n})`\n  padding: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.59);\n\n  &:enter { \n    opacity: 0;\n    transform: translateX(-100%); \n  }\n\n  &:enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;\n  }\n\n  &:exit { \n    opacity: 1;\n    transform: translateX(0);\n  }\n\n  &:exit-active {\n    opacity: 0;\n    transform: translateX(-100%);\n    transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;\n  }\n`;\n\nexport default Slide;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport Contact from '../Containers/ContactContainer';\nimport { List } from './ContactList.styled';\nimport Slide from '../../transition/slide.transition';\n\nconst ContactList = ({ contacts }) => {\n  // const filteredContacts = filterContacts(contacts, filter);\n\n  return (\n    <TransitionGroup component={List}>\n      {contacts.map(item => (\n        <Slide key={item.id}>\n          <Contact item={item} />\n        </Slide>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default ContactList;\n","const getFilter = state => state.filter;\n\nexport default getFilter;\n","import { createSelector } from 'reselect';\nimport getFilter from '../filter/filterSelectors';\n\nexport const getContacts = state => state.contacts;\n\nexport const getContactsWithFilter = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\n","import { connect } from 'react-redux';\nimport ContactList from '../ContactList/ContactList';\nimport { getContactsWithFilter } from '../../redux/contacts/contactsSelectors';\n\nconst mapStateToProps = state => ({\n  contacts: getContactsWithFilter(state),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px 10px 15px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.59);\n`;\n\nexport const Label = styled.label`\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 500;\n`;\n\nexport const InputField = styled.input`\n  display: block;\n  width: 100%;\n  padding: 8px 5px;\n  border-radius: 4px;\n  border: 1px solid rgb(126, 126, 126);\n\n  :focus {\n    border-color: rgb(0, 106, 177);\n    outline: none;\n  }\n`;\n","import transition from 'styled-transition-group';\n\nconst PopFilter = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 250,\n})`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px 10px 15px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.59);\n\n  &:enter {\n    transform: scale(0);\n  }\n\n  &:enter-active {\n    transform: scale(1);\n    transition: transform 250ms ease-in-out;\n  }\n\n  &:exit {\n    transform: scale(1);\n  }\n\n  &:exit-active {\n    transform: scale(0);\n    transition: transform 250ms ease-in-out;\n  }\n`;\n\nexport default PopFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, InputField } from './ContactFilter.styled';\nimport PopFilter from '../../transition/pop.transition';\n\nconst ContactFilter = ({ contacts, filter, changeFilter }) => (\n  <PopFilter in={contacts.length >= 2}>\n    <Label>\n      Find contacts by name\n      <InputField\n        type=\"text\"\n        value={filter}\n        onChange={e => changeFilter(e.target.value)}\n      />\n    </Label>\n  </PopFilter>\n);\n\nContactFilter.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape([]).isRequired).isRequired,\n  filter: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default ContactFilter;\n","import { connect } from 'react-redux';\nimport ContactFilter from '../ContactFilter/ContactFilter';\nimport changeFilter from '../../redux/filter/filterActions';\nimport { getContacts } from '../../redux/contacts/contactsSelectors';\nimport getFilter from '../../redux/filter/filterSelectors';\n\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = {\n  changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFilter);\n","import { CHANGE_FILTER } from '../actionTypes';\n\nconst changeFilter = value => ({\n  type: CHANGE_FILTER,\n  payload: value,\n});\n\nexport default changeFilter;\n","import { toast } from 'react-toastify';\n\n/**\n * find data contact\n */\nconst findContact = (contacts, contact) =>\n  contacts.find(item => item.name === contact.name);\n\n/**\n * save to localStorage\n */\nconst save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (err) {\n    throw new Error();\n  }\n};\n\n/**\n * get data from localStorage\n */\nconst get = key => {\n  try {\n    const items = localStorage.getItem(key);\n\n    return items ? JSON.parse(items) : null;\n  } catch (err) {\n    throw new Error();\n  }\n};\n\n/**\n * check valid contact data\n */\nconst isInvalidContact = ({ name, number }) => {\n  if (name.length <= 1 || name.trim() === 0) {\n    toast.error(`Your name is not valid. Please enter correct information.`);\n    return true;\n  }\n\n  if (!number.match(/^\\(?([0-9]{3})\\)?[- ]?([0-9]{2})[- ]?([0-9]{2})$/)) {\n    toast.error(`Your number is not valid. Please enter correct information.`);\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * check for availability data in state\n */\nconst hasStateContact = (state, contact) => {\n  const stateContact = findContact(state, contact);\n\n  if (stateContact) {\n    toast.error(`${contact.name} is already in contacts.`);\n    return true;\n  }\n\n  return false;\n};\n\nexport { findContact, save, get, isInvalidContact, hasStateContact };\n","import styled from 'styled-components';\nimport { ToastContainer } from 'react-toastify';\n\nexport const PhonebookContainer = styled.div`\n  max-width: 400px;\n  min-width: 310px;\n  margin: 0 auto;\n  padding: 0 5px;\n`;\n\nexport const PhonebookTitle = styled.h1`\n  margin: 0 0 10px 0;\n  font-family: sans-serif;\n  font-size: 30px;\n  line-height: 1.2;\n  font-weight: 900;\n  color: rgb(0, 106, 177);\n`;\n\nexport const PhonebookSubTitle = styled.h2`\n  margin: 0 0 10px 0;\n  font-family: sans-serif;\n  font-size: 20px;\n  line-height: 1.2;\n  font-weight: 900;\n  color: rgb(0, 106, 177);\n`;\n\nexport const Notification = styled(ToastContainer)`\n  top: -5px;\n  right: 37%;\n  padding: 6px 4px;\n  margin: 0;\n  width: 210px;\n  .Toastify__close-button {\n    display: none;\n  }\n`;\n","import transition from 'styled-transition-group';\n\nconst SlideTitle = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 500,\n})`\n  &:enter { \n    opacity: 0;\n    transform: translateX(-100%); \n  }\n\n  &:enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: opacity 500ms ease-in-out, transform 500ms ease-in-out;\n  }\n\n  &:exit { \n    opacity: 1;\n    transform: translateX(0);\n  }\n\n  &:exit-active {\n    opacity: 0;\n    transform: translateX(-100%);\n    transition: opacity 500ms ease-in-out, transform 500ms ease-in-out;\n  }\n`;\n\nexport default SlideTitle;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactForm from '../Containers/FormContainer';\nimport ContactList from '../Containers/ContactListContainer';\nimport ContactFilter from '../Containers/ContactFilterContainer';\nimport { get, save } from '../../utils/helpers';\nimport {\n  PhonebookContainer,\n  PhonebookTitle,\n  PhonebookSubTitle,\n  Notification,\n} from './Phonebook.styled';\nimport SlideTitle from '../../transition/popText.transition';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Phonebook = ({ getAllContacts, contacts }) => {\n  const [showTitle, setShowTitle] = useState(false);\n\n  useEffect(() => {\n    setShowTitle(true);\n\n    const persistedContacts = get('contacts');\n\n    if (persistedContacts) {\n      getAllContacts(persistedContacts);\n    }\n  }, [getAllContacts]);\n\n  useEffect(() => {\n    save('contacts', contacts);\n  }, [contacts]);\n\n  return (\n    <PhonebookContainer>\n      <SlideTitle in={showTitle}>\n        <PhonebookTitle>Phonebook</PhonebookTitle>\n      </SlideTitle>\n      <ContactForm />\n      <PhonebookSubTitle>Contacts</PhonebookSubTitle>\n      <ContactFilter />\n      <ContactList />\n      <Notification autoClose={1500} />\n    </PhonebookContainer>\n  );\n};\n\nPhonebook.propTypes = {\n  getAllContacts: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(PropTypes.shape([]).isRequired).isRequired,\n};\n\nexport default Phonebook;\n","import { connect } from 'react-redux';\nimport { getAllContacts } from '../../redux/contacts/contactsActions';\nimport Phonebook from '../Phonebook/Phonebook';\nimport { getContacts } from '../../redux/contacts/contactsSelectors';\n\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n});\n\nconst mapDispatchToProps = {\n  getAllContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\n","import React from 'react';\nimport Phonebook from '../Containers/PhonebookContainer';\n\nconst App = () => <Phonebook />;\n\nexport default App;\n","import { GET_ALL_CONTACTS, ADD_CONTACT, DELETE_CONTACT } from '../actionTypes';\nimport { isInvalidContact, hasStateContact } from '../../utils/helpers';\n\nconst contactReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case GET_ALL_CONTACTS: {\n      return [...state, ...payload];\n    }\n\n    case ADD_CONTACT: {\n      if (hasStateContact(state, payload)) {\n        return state;\n      }\n      if (isInvalidContact(payload)) {\n        return state;\n      }\n\n      return [...state, payload];\n    }\n\n    case DELETE_CONTACT: {\n      const filteredState = state.filter(contact => contact.id !== payload);\n\n      return filteredState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default contactReducer;\n","import { CHANGE_FILTER } from '../actionTypes';\n\nconst filterReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case CHANGE_FILTER: {\n      return payload;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { RESET_INPUT, CHANGE_INPUT } from '../actionTypes';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nconst formReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case RESET_INPUT:\n      return initialState;\n    case CHANGE_INPUT:\n      return {\n        ...state,\n        ...payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default formReducer;\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from './contacts/contactsReducer';\nimport filterReducer from './filter/filterReducer';\nimport formReducer from './form/formReducer';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n  form: formReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App/App';\nimport store from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}